<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- Fichero Ant para la compilación del proyecto -->
<!-- David Llanso, Marco Antonio Gomez Martin -->
<!-- Septiembre, 2010 -->

<project name="VLD" default="build">

  <!-- =========== -->
  <!-- PROPIEDADES -->
  <!-- =========== -->

  <property name="vslogfile" value="${basedir}/vslog.txt"/>
  <property name="vldSLN" value="vld_vs12.sln"/>

  <patternset id="vctmpfiles">
    <include name="**/*.suo"/>
    <include name="**/*.ncb"/>
    <include name="**/*.exp"/>
    <include name="**/*.ilk"/>
    <include name="**/*.user"/>
  </patternset>

  <taskdef resource = "vcTasks.properties" classpath="vcTask"/>

  <!-- =============================================== -->
  <!-- TARGET DE PUBLICACION DE .h Y BINARIOS          -->
  <!-- =============================================== -->

<target name="publishDependencies" depends="publishDependenciesW32" />

<target name="check-is-W32">
   <condition property="is-W32">
      <contains string="${sun.arch.data.model}" substring="32" />
   </condition>
</target>

<!--<target name="publishDependenciesW32" depends="check-is-W32" if="is-W32">-->
<target name="publishDependenciesW32">
   <copy todir="../bin/Debug">
       <fileset dir="setup/dbghelp/x86/" includes="**.dll,**.manifest"/>
   </copy>
</target>

<target name="publishDependenciesW64" depends="check-is-W32" unless="is-W32">
   <copy todir="../bin/Debug">
       <fileset dir="setup/dbghelp/x64/" includes="**.dll,**.manifest"/>
   </copy>
</target>

<target name="publishLibBin">
   <copy todir="../lib/Debug">
       <fileset dir="src/bin/Win32/Release-v120/" includes="**.lib"/>
   </copy>
   <copy todir="../bin/Debug">
       <fileset dir="src/bin/Win32/Release-v120/" includes="**.dll"/>
   </copy>
   <copy file="vld.ini" todir="../bin/Debug"/>
</target>

<target name="publishIncludes">
   <copy file="src/vld.h" todir="../include"/>
   <copy file="src/vld_def.h" todir="../include"/>
</target>

  <!-- ==================================== -->
  <!-- TARGET DE INVOCACION A VISUAL STUDIO -->
  <!-- ==================================== -->

<!-- Objetivo que compila un proyecto de VC12.
  Parámetros (utilizando propiedades):
  projectfolder: Directorio donde está el SLN.
  buildmode: Configuracion. Normalmente, Debug o Release. Este proyecto lo usamos de manera
    un tanto especial. Si definimos Release no compilamos nada porque VLD no hará falta y si
    Definimos Debug lo compilamos en Release para que salten los leaks, pero no querremos depurar
    el código generado.
  rebuild: "true" si se quiere recompilar; false si no
  project: Fichero .sln a compilar. Se pueden poner comodines ("**/*.sln").
  vslogfile: fichero donde se guarda el log de la compilacion (se borra luego).
-->
<target name="windowsbuilder">
  <vc12 projectfolder="${projectfolder}" 
       buildmode="${buildmode}"
       rebuild="${rebuild}"
       logfile="${vslogfile}">
    <targets dir="${projectfolder}" includes="${project}"/>
  </vc12>
  <delete file = "${vslogfile}"/>
</target>

<!-- Objetivo que compila el proyecto.
Parametros:
   config: Debug o Release. Este proyecto lo usamos de manera
     un tanto especial. Si definimos Release no compilamos nada porque VLD no hará falta y si
     Definimos Debug lo compilamos en Release para que salten los leaks, pero no querremos depurar
     el código generado.
   rebuild: "true" si se quiere recompilar; false si no.
-->
<target name="compilaSln">

  <antcall target="windowsbuilder">
    <param name="projectfolder" value="${basedir}"/>
    <param name="buildmode" value="${config}"/>
    <param name="project" value="${vldSLN}"/>
  </antcall>
</target>

  <!-- =================== -->
  <!-- TARGETS DE LIMPIEZA -->
  <!-- =================== -->

<target name="cleanDebug"
        description="Elimina los ficheros de la compilacion en Debug">
   <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${basedir}" includes="obj/,bin/"/>
      <fileset dir="${basedir}" includes="**/Win32/,**/obj/"/>
   </delete>
</target>

<!-- No hace nada -->
<target name="cleanRelease"
        description="Elimina los ficheros de la compilacion en Release">
</target>

<target name="clean"
        description="Elimina ficheros de compilación"
	depends="cleanDebug">
</target>

  <!-- ================================== -->
  <!-- TARGETS DE COMPILACION INCREMENTAL -->
  <!-- ================================== -->

<!-- Objetivo que compila el proyecto para modo Debug. 
	 Como no lo querremos depurar, vld lo generamos en Release. -->
<target name="debug"
        description="Compilación (incremental) en modo Debug">

  <antcall target="compilaSln">
    <param name="config" value="Release"/>
    <param name="rebuild" value="false"/>
  </antcall>

  <!-- Y copiamos las dependencias .dll al Exes -->
  <antcall target="publishDependencies"/>

  <!-- tambien las .dll al Exes -->
  <antcall target="publishLibBin"/>

  <!-- Y los ficheros de cabecera -->
  <antcall target="publishIncludes"/>
</target>

<!-- Objetivo que compila el proyecto en modo Release. Como en
	 release no se chequean leaks no generamos nada. Si necesitamos las cabeceras. -->
<target name="release"
        description="Compilación (incremental) en modo Release">

  <!-- Copiamos los ficheros de cabecera -->
  <antcall target="publishIncludes"/>
</target>

<!-- Objetivo que compila el proyecto (Debug+Release) de forma incremental.
	 Como en realidad solo compilamos en debug, esto es análogo a buildDebug. -->
<target name="build"
        description="Compilación (incremental) Debug y Release."
        depends="debug"/>

  <!-- =============================== -->
  <!-- TARGETS DE COMPILACION COMPLETA -->
  <!-- =============================== -->

<!-- Objetivo que compila todo el proyecto en modo Debug. 
	 Como no lo querremos depurar, vld lo generamos en Release. -->
<target name="redebug"
        description="Compilación desde cero en modo Debug"
        depends="cleanDebug">

  <antcall target="compilaSln">
    <param name="config" value="Release"/>
    <param name="rebuild" value="true"/>
  </antcall>

  <!-- Y copiamos las dependencias .dll al Exes -->
  <antcall target="publishDependencies"/>

  <!-- tambien las .dll al Exes -->
  <antcall target="publishLibBin"/>

  <!-- Y los ficheros de cabecera -->
  <antcall target="publishIncludes"/>
</target>

<!-- Objetivo que compila todo el proyecto en modo Release. Como en
	 release no se chequean leaks no generamos nada. Si necesitamos las cabeceras. -->
<target name="rerelease"
        description="Compilación desde cero en modo Release">

  <!-- Copiamos los ficheros de cabecera -->
  <antcall target="publishIncludes"/>

</target>

<!-- Objetivo que compila todo el proyecto (Debug+Release).
	 Como en realidad solo compilamos en debug, esto es análogo a redebug. -->
<target name="rebuild"
        description="Compilación desde cero en Debug y Release."
        depends="redebug"/>

  <!-- ============================= -->
  <!-- TARGETS DE EJECUCION DE TESTS -->
  <!-- ============================= -->

<target name="runTests"
        description="Ejecución de tests del proyecto (si los hay...)."/>

<target name="tests" description="Compilacion y ejecución de tests."
        depends="build, runTests"/>

  <!-- ==================================== -->
  <!-- TARGETS DE CREACION DE DOCUMENTACION -->
  <!-- ==================================== -->

<target name="doxygen"
        description="Genera la documentación, si la hay."/>

  <!-- =========================== -->
  <!-- TARGETS PARA CRUISE CONTROL --> 
  <!-- =========================== -->

<target name="CruiseControl"
        depends="build, runTests"
        description="Compilacion para CruiseControl (build + tests)."/>

</project>
